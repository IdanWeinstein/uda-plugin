Index: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
===================================================================
--- hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml	(revision 1508511)
+++ hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml	(working copy)
@@ -1171,6 +1171,15 @@
 </property>
 
 <property>
+  <name>mapreduce.shuffle.provider.plugin.classes</name>
+  <value>org.apache.hadoop.mapred.ShuffleHandler</value>
+  <description>A comma-separated list of classes that should be loaded as ShuffleProviderPlugin(s).
+  A ShuffleProviderPlugin can serve shuffle requests from reducetasks.
+  Each class in the list must be an AuxiliaryService.
+  </description>
+</property>
+
+<property>
   <name>mapreduce.job.reduce.shuffle.consumer.plugin.class</name>
   <value>org.apache.hadoop.mapreduce.task.reduce.Shuffle</value>
   <description>
Index: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java
===================================================================
--- hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java	(revision 1508511)
+++ hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java	(working copy)
@@ -702,11 +702,27 @@
           ByteBuffer.wrap(containerTokens_dob.getData(), 0,
               containerTokens_dob.getLength());
 
-      // Add shuffle token
-      LOG.info("Putting shuffle token in serviceData");
-      serviceData.put(ShuffleHandler.MAPREDUCE_SHUFFLE_SERVICEID,
-          ShuffleHandler.serializeServiceData(jobToken));
+      // Add shuffle tokens
+      java.util.Collection<String> shuffleProviders = conf.getStringCollection(
+          "mapreduce.shuffle.provider.plugin.classes"); // the constant will come from mapreduce/MRConfig.java
 
+      java.util.Collection<String> auxNames = conf.getStringCollection(
+          org.apache.hadoop.yarn.conf.YarnConfiguration.NM_AUX_SERVICES);
+      for (final String serviceName : auxNames) {
+        String serviceClassName = null;
+        try {
+          String serviceStr = String.format(org.apache.hadoop.yarn.conf.YarnConfiguration.NM_AUX_SERVICE_FMT, serviceName);
+          serviceClassName = conf.get(serviceStr);
+          if (shuffleProviders.contains(serviceClassName)) {
+                LOG.info("Adding " + serviceName + " to serviceData, serviceClassName=" + serviceClassName);
+                serviceData.put(serviceName, ShuffleHandler.serializeServiceData(jobToken));
+          }
+
+        } catch (RuntimeException e) {
+          LOG.error("Failed in " + serviceName+ ", " + serviceClassName, e);
+        }
+      }
+
       Apps.addToEnvironment(
           environment,  
           Environment.CLASSPATH.name(), 
